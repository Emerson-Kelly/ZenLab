{"version":3,"file":"datePicker.bundle.js","mappings":"+GAAA,MAAMA,EAAgBC,SAASC,eAAe,iBAChCC,EAAUF,SAASC,eAAe,WAClCE,EAAUH,SAASC,eAAe,WAClCG,EAAYJ,SAASC,eAAe,aACpCI,EAAYL,SAASC,eAAe,aACpCK,EAAWN,SAASC,eAAe,YAEzC,IAAIM,EAAc,IAAIC,KAClBC,EAAe,KASnB,SAASC,EAAiBC,GACtB,MAAMC,EAAO,IAAIJ,KAAKD,EAAYM,cAAeN,EAAYO,WAAYH,GACnEI,EAAaf,SAASgB,cAAc,OAC1CD,EAAWE,UAAUC,IAAI,OAErBN,EAAKO,kBAAmB,IAAIX,MAAOW,gBACnCJ,EAAWE,UAAUC,IAAI,WAEzBT,GAAgBG,EAAKO,iBAAmBV,EAAaU,gBACrDJ,EAAWE,UAAUC,IAAI,YAG7BH,EAAWK,YAAcT,EACzBI,EAAWM,iBAAiB,SAAS,IApBzC,SAAwBV,GACpBF,EAAe,IAAID,KAAKD,EAAYM,cAAeN,EAAYO,WAAYH,GAC3EN,EAAUiB,MAAQb,EAAac,mBAAmB,SAClDjB,EAASkB,MAAMC,QAAU,OACzBC,GACJ,CAe+CC,CAAehB,KAC1DZ,EAAc6B,YAAYb,EAC9B,CASM,SAASW,IACX3B,EAAc8B,UAAY,GAET,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACnDC,SAAQC,GAXrB,SAA8BA,GAC1B,MAAMC,EAAiBhC,SAASgB,cAAc,OAC9CgB,EAAef,UAAUC,IAAI,YAC7Bc,EAAeZ,YAAcW,EAC7BhC,EAAc6B,YAAYI,EAC9B,CAMgCC,CAAqBF,KAEjD,MAAMG,EAAW,IAAI1B,KAAKD,EAAYM,cAAeN,EAAYO,WAAY,GACvEqB,EAAU,IAAI3B,KAAKD,EAAYM,cAAeN,EAAYO,WAAa,EAAG,GAE1EsB,EAAgBF,EAASG,SAE/BjC,EAAUgB,YAAc,GAAGb,EAAY+B,eAAe,UAAW,CAAEC,MAAO,YAAahC,EAAYM,gBAEnG,IAAK,IAAI2B,EAAI,EAAGA,EAAIJ,EAAeI,IAAK,CACpC,MAAMC,EAAkBzC,SAASgB,cAAc,OAC/CyB,EAAgBxB,UAAUC,IAAI,MAAO,SACrCnB,EAAc6B,YAAYa,EAC9B,CAEA,IAAK,IAAI9B,EAAM,EAAGA,GAAOwB,EAAQO,UAAW/B,IACxCD,EAAiBC,EAEzB,CAyBA,SAASgC,IACatC,EAAUuC,wBAE5BtC,EAASkB,MAAMqB,IAAM,MAEzB,CA5BA3C,EAAQmB,iBAAiB,SAAUyB,IAC/BvC,EAAYwC,SAASxC,EAAYO,WAAa,GAC9CgC,EAAME,iBACNtB,GAAgB,IAGpBvB,EAAQkB,iBAAiB,SAAUyB,IAC/BvC,EAAYwC,SAASxC,EAAYO,WAAa,GAC9CgC,EAAME,iBACNtB,GAAgB,IAGpBrB,EAAUgB,iBAAiB,SAAS,KAChCf,EAASkB,MAAMC,QAAU,QACzBkB,GAAkB,IAGtB3C,SAASqB,iBAAiB,SAAUyB,IAC3BzC,EAAU4C,SAASH,EAAMI,SAAY5C,EAAS2C,SAASH,EAAMI,UAC9D5C,EAASkB,MAAMC,QAAU,OAC7B,IAUJ0B,OAAO9B,iBAAiB,SAAUsB,GAElCjB,G","sources":["webpack://zenlab/./src/datePicker.js"],"sourcesContent":["const daysContainer = document.getElementById(\"daysContainer\");\n        const prevBtn = document.getElementById(\"prevBtn\");\n        const nextBtn = document.getElementById(\"nextBtn\");\n        const monthYear = document.getElementById(\"monthYear\");\n        const dateInput = document.getElementById(\"dateInput\");\n        const calendar = document.getElementById(\"calendar\");\n\n        let currentDate = new Date();\n        let selectedDate = null;\n\n        function handleDayClick(day) {\n            selectedDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), day);\n            dateInput.value = selectedDate.toLocaleDateString(\"en-US\");\n            calendar.style.display = \"none\";\n            renderCalendar();\n        }\n\n        function createDayElement(day) {\n            const date = new Date(currentDate.getFullYear(), currentDate.getMonth(), day);\n            const dayElement = document.createElement(\"div\");\n            dayElement.classList.add(\"day\");\n\n            if (date.toDateString() === new Date().toDateString()) {\n                dayElement.classList.add(\"current\");\n            }\n            if (selectedDate && date.toDateString() === selectedDate.toDateString()) {\n                dayElement.classList.add(\"selected\");\n            }\n\n            dayElement.textContent = day;\n            dayElement.addEventListener(\"click\", () => handleDayClick(day));\n            daysContainer.appendChild(dayElement);\n        }\n\n        function createDayNameElement(dayName) {\n            const dayNameElement = document.createElement(\"div\");\n            dayNameElement.classList.add(\"day-name\");\n            dayNameElement.textContent = dayName;\n            daysContainer.appendChild(dayNameElement);\n        }\n\n       export function renderCalendar() {\n            daysContainer.innerHTML = \"\";\n        \n            const dayNames = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n            dayNames.forEach(dayName => createDayNameElement(dayName));\n        \n            const firstDay = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);\n            const lastDay = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0);\n        \n            const firstDayIndex = firstDay.getDay();\n        \n            monthYear.textContent = `${currentDate.toLocaleString(\"default\", { month: \"long\" })} ${currentDate.getFullYear()}`;\n        \n            for (let i = 0; i < firstDayIndex; i++) {\n                const emptyDayElement = document.createElement(\"div\");\n                emptyDayElement.classList.add(\"day\", \"empty\");\n                daysContainer.appendChild(emptyDayElement);\n            }\n        \n            for (let day = 1; day <= lastDay.getDate(); day++) {\n                createDayElement(day);\n            }\n        }\n\n        prevBtn.addEventListener(\"click\", (event) => {\n            currentDate.setMonth(currentDate.getMonth() - 1);\n            event.preventDefault();\n            renderCalendar();\n        });\n\n        nextBtn.addEventListener(\"click\", (event) => {\n            currentDate.setMonth(currentDate.getMonth() + 1);\n            event.preventDefault();\n            renderCalendar();\n        });\n\n        dateInput.addEventListener(\"click\", () => {\n            calendar.style.display = \"block\";\n            positionCalendar();\n        });\n\n        document.addEventListener(\"click\", (event) => {\n            if (!dateInput.contains(event.target) && !calendar.contains(event.target)) {\n                calendar.style.display = \"none\";\n            }\n        });\n\n        function positionCalendar() {\n            const inputRect = dateInput.getBoundingClientRect();\n            //calendar.style.top = inputRect.bottom + \"px\";\n            calendar.style.top = '100%'\n            //calendar.style.left = inputRect.left + \"px\";\n        }\n\n        window.addEventListener(\"resize\", positionCalendar);\n\n        renderCalendar();\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"names":["daysContainer","document","getElementById","prevBtn","nextBtn","monthYear","dateInput","calendar","currentDate","Date","selectedDate","createDayElement","day","date","getFullYear","getMonth","dayElement","createElement","classList","add","toDateString","textContent","addEventListener","value","toLocaleDateString","style","display","renderCalendar","handleDayClick","appendChild","innerHTML","forEach","dayName","dayNameElement","createDayNameElement","firstDay","lastDay","firstDayIndex","getDay","toLocaleString","month","i","emptyDayElement","getDate","positionCalendar","getBoundingClientRect","top","event","setMonth","preventDefault","contains","target","window"],"sourceRoot":""}
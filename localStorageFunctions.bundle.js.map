{"version":3,"file":"localStorageFunctions.bundle.js","mappings":"8FAGO,SAASA,EAA2BC,GACvCC,aAAaC,QAAQ,iBAAkBC,KAAKC,UAAUJ,IACtDK,QAAQC,IAAI,kCAAmCN,EACnD,CAEO,SAASO,IACZ,MAAMC,EAAiBP,aAAaQ,QAAQ,kBAC5C,GAAID,EACA,IACI,MAAME,EAAiBP,KAAKQ,MAAMH,GAElC,OADAH,QAAQC,IAAI,qCAAsCI,GAC3CA,CACX,CAAE,MAAOE,GACLP,QAAQO,MAAM,4CAA6CA,EAC/D,MAEAP,QAAQC,IAAI,sCAEhB,MAAO,EACX,CAGO,SAASO,EAAwBC,GACpC,MAAMC,EAAiB,CAAC,EAExBD,EAAUE,SAAQC,IACd,MAAMC,EAAYD,EAAKC,UAClBH,EAAeG,KAChBH,EAAeG,GAAa,IAEhCH,EAAeG,GAAWC,KAAKF,EAAK,IAGxC,IAAK,MAAMC,KAAaH,EAAgB,CACpC,MAAMK,EAAcL,EAAeG,GACnCjB,aAAaC,QAAQ,eAAegB,IAAaf,KAAKC,UAAUgB,IAChEf,QAAQC,IAAI,qBAAqBY,2BAAoCE,EACzE,CAEAnB,aAAaC,QAAQ,iBAAkBC,KAAKC,UAAUU,GAC1D,CAEO,SAASO,IACZ,MACMC,EAAcrB,aAAaQ,QAAQ,kBACzC,GAAIa,EACA,IACI,MAAMC,EAAcpB,KAAKQ,MAAMW,GAE/B,OADAjB,QAAQC,IAAI,kCAAmCiB,GACxCA,CACX,CAAE,MAAOX,GACLP,QAAQO,MAAM,yCAA0CA,EAC5D,MAEAP,QAAQC,IAAI,mCAEhB,MAbkB,EActB,C","sources":["webpack://zenlab/./src/localStorageFunctions.js"],"sourcesContent":["// localStorageFunctions.js\n\n// Handle Projects\nexport function saveProjectsToLocalStorage(projects) {\n    localStorage.setItem('zenLabProjects', JSON.stringify(projects));\n    console.log('Projects saved to localStorage:', projects);\n}\n\nexport function loadProjectsFromLocalStorage() {\n    const storedProjects = localStorage.getItem('zenLabProjects');\n    if (storedProjects) {\n        try {\n            const parsedProjects = JSON.parse(storedProjects);\n            console.log('Projects loaded from localStorage:', parsedProjects);\n            return parsedProjects;\n        } catch (error) {\n            console.error('Error parsing projects from localStorage:', error);\n        }\n    } else {\n        console.log('No projects found in localStorage.');\n    }\n    return [];\n}\n\n// Handle Tasks\nexport function saveTasksToLocalStorage(taskArray) {\n    const tasksByProject = {};\n\n    taskArray.forEach(task => {\n        const projectId = task.projectId;\n        if (!tasksByProject[projectId]) {\n            tasksByProject[projectId] = [];\n        }\n        tasksByProject[projectId].push(task);\n    });\n\n    for (const projectId in tasksByProject) {\n        const tasksToSave = tasksByProject[projectId];\n        localStorage.setItem(`zenLabTasks-${projectId}`, JSON.stringify(tasksToSave));\n        console.log(`Tasks for project ${projectId} saved to localStorage:`, tasksToSave);\n    }\n\n    localStorage.setItem('zenLabAllTasks', JSON.stringify(taskArray));\n}\n\nexport function loadTasksFromLocalStorage() {\n    const taskArray = [];\n    const storedTasks = localStorage.getItem('zenLabAllTasks');\n    if (storedTasks) {\n        try {\n            const parsedTasks = JSON.parse(storedTasks);\n            console.log('Tasks loaded from localStorage:', parsedTasks);\n            return parsedTasks;\n        } catch (error) {\n            console.error('Error parsing tasks from localStorage:', error);\n        }\n    } else {\n        console.log('No tasks found in localStorage.');\n    }\n    return taskArray;\n}\n"],"names":["saveProjectsToLocalStorage","projects","localStorage","setItem","JSON","stringify","console","log","loadProjectsFromLocalStorage","storedProjects","getItem","parsedProjects","parse","error","saveTasksToLocalStorage","taskArray","tasksByProject","forEach","task","projectId","push","tasksToSave","loadTasksFromLocalStorage","storedTasks","parsedTasks"],"sourceRoot":""}